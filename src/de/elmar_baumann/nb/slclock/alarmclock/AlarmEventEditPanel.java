package de.elmar_baumann.nb.slclock.alarmclock;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 * @author Elmar Baumann
 */
public class AlarmEventEditPanel extends javax.swing.JPanel {

    private final AlarmEvent event;
    private final Map<JCheckBox, DayOfWeek> cbDaysOfWeek = new HashMap<>();

    public AlarmEventEditPanel() {
        this(createCurrentEvent());
    }

    private static AlarmEvent createCurrentEvent() {
        Calendar cal = Calendar.getInstance();
        cal.setTimeInMillis(System.currentTimeMillis());
        return new AlarmEvent(cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE));
    }

    public AlarmEventEditPanel(AlarmEvent event) {
        this.event = event;
        initComponents();
        initMap();
        initComboBoxes();
        eventToGui();
    }

    private void initMap() {
        cbDaysOfWeek.put(checkBoxMonday, DayOfWeek.MONDAY);
        cbDaysOfWeek.put(checkBoxTuesday, DayOfWeek.TUESDAY);
        cbDaysOfWeek.put(checkBoxWednesday, DayOfWeek.WEDNESDAY);
        cbDaysOfWeek.put(checkBoxThursday, DayOfWeek.THURSDAY);
        cbDaysOfWeek.put(checkBoxFriday, DayOfWeek.FRIDAY);
        cbDaysOfWeek.put(checkBoxSaturday, DayOfWeek.SATURDAY);
        cbDaysOfWeek.put(checkBoxSunday, DayOfWeek.SUNDAY);
    }

    private void initComboBoxes() {
        comboBoxHour.setModel(new DefaultComboBoxModel<>(getTimeUnits(0, 23)));
        comboBoxMinute.setModel(new DefaultComboBoxModel<>(getTimeUnits(0, 59)));
    }

    Integer[] getTimeUnits(int min, int max) {
        Integer[] units = new Integer[max - min + 1];
        for (int i = min; i <= max; i++) {
            units[i - min] = i;
        }
        return units;
    }

    private void eventToGui() {
        final int eventHour = event.getHour();
        comboBoxHour.setSelectedItem(eventHour);
        comboBoxMinute.setSelectedItem(event.getMinute());
        checkBoxSound.setSelected(event.isSound());
        String displayName = event.getDisplayName();
        textFieldDisplayName.setText(displayName == null ? "" : displayName);
        Collection<DayOfWeek> eventDaysOfWeek = event.getDaysOfWeek();
        for (JCheckBox cb : cbDaysOfWeek.keySet()) {
            cb.setSelected(eventDaysOfWeek.contains(cbDaysOfWeek.get(cb)));
        }
    }

    public AlarmEvent save() {
        event.setDisplayName(textFieldDisplayName.getText());
        event.setHour((int) comboBoxHour.getSelectedItem());
        event.setMinute((int) comboBoxMinute.getSelectedItem());
        event.setSound(checkBoxSound.isSelected());
        Collection<DayOfWeek> daysOfWeek = new ArrayList<>(7);
        for (JCheckBox cb : cbDaysOfWeek.keySet()) {
            if (cb.isSelected()) {
                daysOfWeek.add(cbDaysOfWeek.get(cb));
            }
        }
        event.setDaysOfWeek(daysOfWeek);
        return event;
    }

    private final ListCellRenderer<Integer> timeUnitRenderer = new ListCellRenderer<Integer>() {

        private final DefaultListCellRenderer delegate = new DefaultListCellRenderer();

        @Override
        public Component getListCellRendererComponent(JList<? extends Integer> list, Integer value, int index, boolean isSelected, boolean cellHasFocus) {
            String timeUnit = String.format("%2d", value);
            return delegate.getListCellRendererComponent(list, timeUnit, index, isSelected, cellHasFocus);
        }
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelDisplayName = new javax.swing.JLabel();
        textFieldDisplayName = new javax.swing.JTextField();
        labelTime = new javax.swing.JLabel();
        comboBoxHour = new javax.swing.JComboBox<>();
        comboBoxMinute = new javax.swing.JComboBox<>();
        checkBoxSound = new javax.swing.JCheckBox();
        panelDaysOfWeek = new javax.swing.JPanel();
        checkBoxMonday = new javax.swing.JCheckBox();
        checkBoxTuesday = new javax.swing.JCheckBox();
        checkBoxWednesday = new javax.swing.JCheckBox();
        checkBoxThursday = new javax.swing.JCheckBox();
        checkBoxFriday = new javax.swing.JCheckBox();
        checkBoxSaturday = new javax.swing.JCheckBox();
        checkBoxSunday = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        labelDisplayName.setLabelFor(textFieldDisplayName);
        org.openide.awt.Mnemonics.setLocalizedText(labelDisplayName, org.openide.util.NbBundle.getMessage(AlarmEventEditPanel.class, "AlarmEventEditPanel.labelDisplayName.text")); // NOI18N

        textFieldDisplayName.setColumns(15);

        labelTime.setLabelFor(comboBoxHour);
        org.openide.awt.Mnemonics.setLocalizedText(labelTime, org.openide.util.NbBundle.getMessage(AlarmEventEditPanel.class, "AlarmEventEditPanel.labelTime.text")); // NOI18N

        comboBoxHour.setRenderer(timeUnitRenderer);

        comboBoxMinute.setRenderer(timeUnitRenderer);

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxSound, org.openide.util.NbBundle.getMessage(AlarmEventEditPanel.class, "AlarmEventEditPanel.checkBoxSound.text")); // NOI18N

        panelDaysOfWeek.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AlarmEventEditPanel.class, "AlarmEventEditPanel.panelDaysOfWeek.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxMonday, DayOfWeek.MONDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxTuesday, DayOfWeek.TUESDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxWednesday, DayOfWeek.WEDNESDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxThursday, DayOfWeek.THURSDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxFriday, DayOfWeek.FRIDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxSaturday, DayOfWeek.SATURDAY.getGuiString());

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxSunday, DayOfWeek.SUNDAY.getGuiString());

        javax.swing.GroupLayout panelDaysOfWeekLayout = new javax.swing.GroupLayout(panelDaysOfWeek);
        panelDaysOfWeek.setLayout(panelDaysOfWeekLayout);
        panelDaysOfWeekLayout.setHorizontalGroup(
            panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDaysOfWeekLayout.createSequentialGroup()
                .addGroup(panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxMonday)
                    .addComponent(checkBoxTuesday)
                    .addComponent(checkBoxWednesday)
                    .addComponent(checkBoxThursday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxFriday)
                    .addComponent(checkBoxSaturday)
                    .addComponent(checkBoxSunday))
                .addGap(0, 158, Short.MAX_VALUE))
        );
        panelDaysOfWeekLayout.setVerticalGroup(
            panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDaysOfWeekLayout.createSequentialGroup()
                .addGroup(panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxMonday)
                    .addComponent(checkBoxFriday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxTuesday)
                    .addComponent(checkBoxSaturday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDaysOfWeekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxWednesday)
                    .addComponent(checkBoxSunday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxThursday))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, ":"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDaysOfWeek, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDisplayName)
                            .addComponent(labelTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldDisplayName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkBoxSound)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDisplayName)
                    .addComponent(textFieldDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTime)
                    .addComponent(comboBoxHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxSound)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDaysOfWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxFriday;
    private javax.swing.JCheckBox checkBoxMonday;
    private javax.swing.JCheckBox checkBoxSaturday;
    private javax.swing.JCheckBox checkBoxSound;
    private javax.swing.JCheckBox checkBoxSunday;
    private javax.swing.JCheckBox checkBoxThursday;
    private javax.swing.JCheckBox checkBoxTuesday;
    private javax.swing.JCheckBox checkBoxWednesday;
    private javax.swing.JComboBox<Integer> comboBoxHour;
    private javax.swing.JComboBox<Integer> comboBoxMinute;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelDisplayName;
    private javax.swing.JLabel labelTime;
    private javax.swing.JPanel panelDaysOfWeek;
    private javax.swing.JTextField textFieldDisplayName;
    // End of variables declaration//GEN-END:variables

}
